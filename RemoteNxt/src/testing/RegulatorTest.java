package testing;

import lejos.nxt.Button;
import lejos.nxt.Sound;
import car.Car;

public class RegulatorTest{
	private double[] time = {0.0, 0.2243, 1.4243, 2.3646, 2.4705, 2.5012, 2.6245, 2.9456, 3.5276, 4.6536, 5.7767, 6.8572, 7.5357, 7.8667, 8.3965, 9.4777, 10.6095, 11.6801, 12.7743, 13.8824, 14.9432, 16.0845, 17.1151, 18.2761, 19.2979, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.3064, -0.3518, -0.456, -0.6019, -0.7764, -0.8673, -0.9135, -0.6025, -0.4976, -0.3663, -0.1961, -0.1019, -0.0549, -0.0292, -0.0154, -0.0083, -0.0043, -0.0024, -0.0012, -0.0007};
	private double[] alpha = {0.0072, 0.6243, 1.8243, 2.4055, 2.4879, 2.5092, 2.7138, 3.0974, 3.8536, 5.0536, 6.1053, 7.2559, 7.6512, 8.0069, 8.6843, 9.8777, 10.9365, 12.0801, 13.1082, 14.2701, 15.2926, 16.4509, 17.4874, 18.6234, 19.6892, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.3094, -0.3827, -0.4989, -0.6645, -0.8157, -0.8845, -0.9244, -0.5636, -0.4588, -0.3102, -0.1556, -0.0844, -0.0436, -0.024, -0.0123, -0.0068, -0.0035, -0.0019, -0.001, -0.0005};
	private double[] beta = {0.0434, 1.0243, 2.2243, 2.4465, 2.4946, 2.5488, 2.8199, 3.2855, 4.2536, 5.4349, 6.4614, 7.3958, 7.747, 8.179, 9.0777, 10.264, 11.2874, 12.4448, 13.4824, 14.6166, 15.6845, 16.7817, 17.8874, 18.9496, 20.0, 0.0, 0.0, 0.0, 0.0, 1.3728, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.1395, -0.3243, -0.4175, -0.5471, -0.7269, -0.8456, -0.8998, -0.9277, -0.5332, -0.4154, -0.2471, -0.1245, -0.0689, -0.0353, -0.0194, -0.0101, -0.0054, -0.0029, -0.0015, -0.0008, -0.0004};
	
	private Car car;
	
	public RegulatorTest(){
		init();
	}
	
	private void init(){
		car = new Car();
	}
	
	private long startTime = 0;
	
	private long getTime(){
		if(startTime==0){
			startTime = System.currentTimeMillis();
		}
		return (System.currentTimeMillis()-startTime)/100;
	}
	
	private void run(){
		int i = 0;
		int l = 25;
		car.moveBackward();
		while(i < l){
			if(getTime()>=time[i]){
				car.turnTo(alpha[i]);
				car.turnHitchTo(beta[i]);
				i++;
			}
		}
		car.stopMoving();
		car.turnTo(0);
		car.turnHitchTo(0);
		car.stopMoving();
	}
	
	private void run2(){
		car.moveBackward();
		while(true){
			car.regulate();
		}
	}
	
	public static void main(String[] args) {
		RegulatorTest r = new RegulatorTest();
		System.out.println("Press button to start.");
		Button.waitForAnyPress();
		r.run2();
	}
}
